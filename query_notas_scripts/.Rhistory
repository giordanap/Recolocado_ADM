### Return biv
# Lista de vectores
biv_iv = function(biv,tb){
biv$name = unique( append(biv$name, tb$name) )
biv$iv_tr = append(biv$iv_tr, tb$IVfinalNuevoTrain)
biv$iv_ts = append(biv$iv_ts, tb$IVfinalNuevoTest)
k = length( biv$name )
if (k == 1) {
biv$iv_tr = biv$iv_tr[ length(biv$iv_tr) ]
biv$iv_ts = biv$iv_ts[ length(biv$iv_ts) ]
} else {
biv$iv_tr = c( biv$iv_tr[1:(k-1)], biv$iv_tr[ length(biv$iv_tr) ])
biv$iv_ts = c( biv$iv_ts[1:(k-1)], biv$iv_ts[ length(biv$iv_ts) ])
}
return(biv)
}
# Manual
## Numericas
### variable, titulo y color del histograma
manual_numeric = function(var, title, color,dec = 0){
df_manual = as.data.frame(
cbind(
Estadisticos = var,
Min = round( min( data_train[, var], na.rm = T ), dec ),
Max = round( max( data_train[, var], na.rm = T ), dec ),
Media = round( mean( data_train[, var], na.rm = T ), dec ),
Mediana = round( median( data_train[, var], na.rm = T ), dec ),
Desv.Est = round( sd( data_train[, var], na.rm = T ), dec )
)
)
hst = hist(data_train[,var], main=title, col = color)
return(list(df_manual, hst))
}
## Categoricas
manual_categorica = function(var,bin){
x = as.character( data_train[, var] )
for (i in 1:length(bin)) {
r = length( bin[[i]] )
t = bin[[i]][1]
if ( r != 1 ) { for ( j in 2:r ) { t = paste(t, bin[[i]][j], sep = ', ') } }
if ( r == 1 ) { x = replace(x, x %in% bin[[i]], bin[[i]] ) } else { x = replace(x, x %in% bin[[i]], t ) }
}
df = as.data.frame( cbind( table(x), prop.table( table(x) ) ) )
colnames(df)<-c('Recuento','Proporcion')
return(df)
}
# Comvertir segundos a tiempo en horas, minutos y segundos.
seg_to_time = function(t) {
seg = t %% 60
t = (t - seg) / 60
min = t %% 60
hrs = (t - min) / 60
txt = paste(hrs,'hrs',min,'min',seg,'seg')
return (txt)
}
# Calculo del timepo de un sript
# time_process = function(nameProcess, script){
time_process = function(nameProcess, start_time){
# # Incio del proceso
# start_time = Sys.time()
#
# # Script a ejecutar
# eval( parse( text = script ) )
#
# # Fin del proceso
# end_time = Sys.time()
# Tiempo empleado
# range_time = seg_to_time( round( as.numeric(end_time) -  as.numeric(start_time)) )
range_time = seg_to_time( round( as.numeric(Sys.time()) -  start_time) )
texto = paste("Complete in ",range_time,"!",sep = '')
# Mensaje de alerta
msgBox = tkmessageBox(title = nameProcess, message = texto, icon = "info", type = "ok")
}
###############################
######      Inicio        #####
###############################
data = read.csv( paste(path,"bases/construccion/","base_axes_sinRepros_final_3.csv", sep="") , header = T, sep = ',')
data[, 'filtro'] = ifelse((data$indeterminado + data$insuficiente) == 0, 0, 1)
data[, 'tm'] = data$malo
data[, 'malo'] = as.factor(data$malo)
writeClipboard(gsub("\\\\", "/", readClipboard()))
X_train_num = read.csv( paste(path,"bases/train_test/","X_train_num.csv", sep="") , header = T, sep = ',')
X_train_cat = read.csv( paste(path,"bases/train_test/","X_train_cat.csv", sep="") , header = T, sep = ',')
X_test_num = read.csv( paste(path,"bases/train_test/","X_test_num.csv", sep="") , header = T, sep = ',')
X_test_cat = read.csv( paste(path,"bases/train_test/","X_test_cat.csv", sep="") , header = T, sep = ',')
y_train = read.csv( paste(path,"bases/train_test/","y_train.csv", sep="") , header = T, sep = ',')
y_test = read.csv( paste(path,"bases/train_test/","y_test.csv", sep="") , header = T, sep = ',')
rownames(X_train_num) = X_train_num$X; X_train_num$X = NULL
rownames(X_train_cat) = X_train_cat$X; X_train_cat$X = NULL
rownames(X_test_num) = X_test_num$X; X_test_num$X = NULL
rownames(X_test_cat) = X_test_cat$X; X_test_cat$X = NULL
rownames(y_train) = y_train$X; y_train$X = NULL
rownames(y_test) = y_test$X; y_test$X = NULL
var_num = c(
# despues de filtros
"ci",
"saldo_cal4_max1m6",
"por_cal34_max1m3",
"can_emp_1m",
"edad",
"saldo_cal1234_max1m3",
"disp_efectivo_max1m6",
"por_uso_efectivo_max1m6",
"por_uso_linea_max1m6",
# modelo vigente
"linea_total_1m",
"frec_mora60_1m12",
# IV mayores a 2% en train y test
'frec_calificacion_0_1m12',
'por_mora_0_min1m6',
'por_mora_0_min1m3',
'por_vig_min1m3',
'por_vig_min1m6',
'por_vig_min1m12',
'por_mora_0_min1m12',
'calificacion_max1m6',
'linea_usada_max1m6',
'linea_total_max1m6',
'disp_efectivo_max1m12',
'por_uso_efectivo_max1m12',
'linea_activa_max1m6',
'linea_total_max1m12',
'linea_activa_max1m12',
'por_cal0_min1m12'
# # ultimo mes
# "por_uso_linea_1m",
# "mora_1m",
# "saldo_1m",
# "linea_activa_1m",
# 'por_mora_0_1m',
# 'por_cal4_1m',
# 'por_cal34_1m',
# 'por_mora90_1m',
# 'saldo_mora90_1m',
# 'por_mora60_1m',
# 'saldo_mora60_1m',
# 'saldo_cal4_1m',
# 'saldo_cal34_1m',
# 'por_castigo_1m',
# 'saldo_castigo_1m',
# 'por_vig_1m',
# 'por_mora30_1m',
# 'saldo_mora30_1m',
# 'por_cal234_1m',
# 'por_cal0_1m',
# 'saldo_cal234_1m',
# 'por_cal1234_1m',
# 'calificacion_1m',
# 'saldo_cal1234_1m',
# 'por_mora0_1m',
# 'saldo_mora0_1m',
# # IV mayor a 2% en train restantes
# 'saldo_cal34_max1m3',
# 'por_mora90_max1m3',
# 'saldo_mora90_max1m3',
# 'por_mora60_max1m3',
# 'saldo_mora60_max1m3',
# 'por_cal4_max1m6',
# 'por_mora90_max1m6',
# 'saldo_mora90_max1m6',
# 'por_mora60_max1m6',
# 'saldo_mora60_max1m6',
# 'por_cal4_max1m3',
# 'frec_por_cal0_100_1m12',
# 'saldo_cal4_max1m3',
# 'por_mora60_max1m12',
# 'saldo_mora60_max1m12',
# 'calificacion_max1m12',
# 'por_mora90_max1m12',
# 'saldo_mora90_max1m12',
# 'por_castigo_max1m6',
# 'saldo_castigo_max1m6',
# 'por_cal0_min1m3',
# 'saldo_cal34_max1m6',
# 'por_cal4_max1m12',
# 'por_castigo_max1m3',
# 'saldo_castigo_max1m3',
# 'saldo_cal4_max1m12',
# 'por_cal34_max1m12',
# 'por_cal34_max1m6',
# 'saldo_cal34_max1m12',
# 'frec_mora_0_1m12',
# 'calificacion_max1m3',
# 'por_cal234_max1m3',
# 'saldo_cal234_max1m3',
# 'por_mora30_max1m3',
# 'saldo_mora30_max1m3',
# 'por_cal0_min1m6',
# 'frec_por_cal4_100_1m12',
# 'por_castigo_max1m12',
# 'saldo_castigo_max1m12',
# 'por_mora30_max1m6',
# 'saldo_mora30_max1m6',
# 'por_cal1234_max1m3',
# 'frec_calificacion_4_1m12',
# 'saldo_cal234_max1m6',
# 'frec_mora90_1m12',
# 'frec_mora120_1m12',
# 'por_cal234_max1m6',
# 'frec_calificacion_34_1m12',
# 'por_mora30_max1m12',
# 'saldo_mora30_max1m12',
# 'frec_mora30_1m12',
# 'mora_max1m3',
# 'por_mora0_max1m3',
# 'saldo_mora0_max1m3',
# 'frec_calificacion_1234_1m12',
# 'por_cal234_max1m12',
# 'frec_mora0_1m12',
# 'saldo_cal234_max1m12',
# 'frec_calificacion_234_1m12',
# 'linea_usada_max1m12',
# 'por_uso_linea_max1m12',
# 'saldo_cal1234_max1m6',
# 'cv_saldo_1m12',
# 'por_cal1234_max1m6'
# # IV mayor a 2% en test restantes
)
length(var_num)
length(unique(var_num))
var_cat = c(
# Fisher
# rescatamos demosgraficas
"marca",
"perfil",
"estado_civil",
# IV mayor a 2% en ambos
'calificacion_var1m12',
'calificacion_max1m6_max7m12',
'calificacion_var1m6',
'calificacion_max1m3_max4m12',
'calificacion_var1m3',
'calificacion_1m_max2m12',
'rec_por_cal4_100_1m12',
'por_vig_var1m6',
'rec_calificacion_0_1m12',
'saldo_var1m3',
'mora_1m_max2m12',
'por_mora_0_min1m6_min7m12',
'rec_mora120_1m12',
'rec_calificacion_1234_1m12',
'rec_calificacion_34_1m12',
'rec_mora90_1m12',
'rec_calificacion_4_1m12',
'rec_mora60_1m12',
'rec_calificacion_234_1m12',
'disp_efectivo_1m_flg',
'linea_total_1m_flg',
'linea_usada_1m_flg',
'por_mora60_1m_max2m12',
'por_mora60_var1m3',
'linea_activa_1m_flg',
'por_cal4_var1m6',
'por_castigo_var1m6',
'rec_por_cal0_100_1m12',
'rec_mora_0_1m12',
'por_cal4_var1m3',
'por_mora30_var1m3',
'por_cal34_1m_max2m12',
'rec_mora0_1m12',
'por_castigo_var1m3',
'saldo_var1m6',
'disp_efectivo_max1m3_flg',
'linea_total_max1m3_flg',
'linea_usada_max1m3_flg',
'por_uso_linea_var1m6',
'linea_activa_var1m3',
'disp_efectivo_max1m6_flg',
'linea_total_max1m6_flg',
'linea_usada_max1m6_flg',
'mora_var1m3',
'por_cal0_min1m6_min7m12',
'por_uso_linea_var1m3',
'linea_activa_1m_max2m12',
'linea_activa_var1m12',
'linea_activa_max1m3_flg',
'por_uso_linea_1m_max2m12',
'linea_activa_var1m6',
'linea_activa_max1m6_flg',
'por_uso_linea_max1m6_max7m12',
'linea_activa_max1m6_max7m12',
'por_uso_linea_max1m3_max4m12',
'por_uso_efectivo_var1m3',
'por_uso_efectivo_1m_max2m12'
# # iv train mayor a 2% restantes
# 'por_cal0_var1m3',
# 'por_mora_0_var1m12',
# 'por_mora_0_var1m3',
# 'por_vig_min1m6_min7m12',
# 'por_cal0_var1m12',
# 'por_vig_var1m12',
# 'por_vig_var1m3',
# 'por_vig_min1m3_min4m12',
# 'por_mora_0_var1m6',
# 'por_mora30_var1m12',
# 'por_cal0_var1m6',
# 'por_cal34_var1m12',
# 'por_cal0_1m_min2m12',
# 'por_mora30_max1m3_max4m12',
# 'por_mora60_var1m12',
# 'por_mora0_var1m12',
# 'por_mora90_var1m12',
# 'por_mora90_1m_max2m12',
# 'por_mora90_max1m3_max4m12',
# 'mora_max1m3_max4m12',
# 'por_mora60_max1m3_max4m12',
# 'por_mora30_var1m6',
# 'por_cal4_1m_max2m12',
# 'por_mora90_var1m6',
# 'por_castigo_max1m6_max7m12',
# 'por_cal34_var1m3',
# 'por_cal1234_max1m3_max4m12',
# 'saldo_max1m3_max4m12',
# 'por_cal34_max1m3_max4m12',
# 'por_mora_0_min1m3_min4m12',
# 'por_mora60_var1m6',
# 'por_mora90_max1m6_max7m12',
# 'por_cal4_max1m3_max4m12',
# 'por_mora90_var1m3',
# 'por_vig_1m_min2m12',
# 'por_cal4_max1m6_max7m12',
# 'por_mora0_max1m6_max7m12',
# 'por_cal0_min1m3_min4m12',
# 'rec_mora30_1m12',
# 'por_mora60_max1m6_max7m12',
# 'por_castigo_1m_max2m12',
# 'por_cal234_var1m3',
# 'por_cal1234_var1m3',
# 'por_castigo_max1m3_max4m12',
# 'por_cal4_var1m12',
# 'por_cal34_var1m6',
# 'por_castigo_var1m12',
# 'por_cal234_max1m3_max4m12',
# 'por_cal234_var1m12',
# 'saldo_max1m6_max7m12',
# 'por_mora0_var1m3',
# 'por_cal34_max1m6_max7m12',
# 'saldo_1m_max2m12',
# 'por_mora0_var1m6',
# 'por_cal234_1m_max2m12',
# 'por_cal234_var1m6',
# 'por_mora0_1m_max2m12',
# 'por_mora0_max1m3_max4m12',
# 'por_uso_efectivo_var1m6',
# 'por_cal1234_var1m12',
# 'por_cal1234_1m_max2m12',
# 'por_mora_0_1m_min2m12',
# 'por_mora30_max1m6_max7m12',
# 'por_uso_efectivo_var1m12',
# 'por_cal1234_var1m6',
# 'por_uso_efectivo_max1m6_max7m12',
# 'por_cal1234_max1m6_max7m12',
# 'linea_activa_max1m3_max4m12',
# 'disp_efectivo_max1m12_flg',
# 'linea_total_max1m12_flg',
# 'linea_usada_max1m12_flg',
# 'mora_var1m12',
# 'por_cal234_max1m6_max7m12',
# 'linea_activa_max1m12_flg',
# 'por_uso_efectivo_max1m3_max4m12',
# 'saldo_var1m12',
# 'mora_var1m6',
# 'mora_max1m6_max7m12',
# # iv test mayor a 2% restantes
# 'por_me_1m_max2m12',
# 'por_me_max1m3_max4m12',
# 'por_me_max1m6_max7m12',
# 'por_me_var1m6',
# 'por_me_var1m3',
# 'por_uso_linea_var1m12',
# 'por_novig_var1m12'
)
length(var_cat)
length(unique(var_cat))
data_train = cbind(X_train_num[, var_num], y_train)
data_train[, 'tm'] = data_train$malo
data_train[, 'malo'] = as.factor(data_train$malo)
data_test = cbind(X_test_num[, var_num], y_test)
data_test[, 'tm'] = data_test$malo
data_test[, 'malo'] = as.factor(data_test$malo)
# # transformacion
data_train[,'edad'] = as.numeric(X_train_num[,'edad'])
# data_train[,'frec_mora60_1m12'] = as.numeric(X_train_num[,'frec_mora60_1m12'])
# data_train[,'frec_calificacion_0_1m12'] = as.numeric(X_train_num[,'frec_calificacion_0_1m12'])
# data_train[,'frec_por_cal0_100_1m12'] = as.numeric(X_train_num[,'frec_por_cal0_100_1m12'])
# data_train[,'calificacion_max1m12'] = as.character(X_train_num[,'calificacion_max1m12'])
# data_train[,'frec_mora30_1m12'] = as.numeric(X_train_num[,'frec_mora30_1m12'])
# #
data_test[,'edad'] = as.numeric(X_test_num[,'edad'])
# data_test[,'frec_mora60_1m12'] = as.numeric(X_test_num[,'frec_mora60_1m12'])
# data_test[,'frec_calificacion_0_1m12'] = as.numeric(X_test_num[,'frec_calificacion_0_1m12'])
# data_test[,'frec_por_cal0_100_1m12'] = as.numeric(X_test_num[,'frec_por_cal0_100_1m12'])
# data_test[,'calificacion_max1m12'] = as.character(X_test_num[,'calificacion_max1m12'])
# data_test[,'frec_mora30_1m12'] = as.numeric(X_test_num[,'frec_mora30_1m12'])
# # imputacion
# data_train$cuota[is.na(data_train$cuota)] = median(X_train_num$cuota, na.rm = T) # 1348.865
# data_train$ci_pv[is.na(data_train$ci_pv)] = median(X_train_num$ci_pv, na.rm = T) # 0.03529931
# #
# data_test$cuota[is.na(data_test$cuota)] = 1348.865
# data_test$ci_pv[is.na(data_test$ci_pv)] = 0.03529931
bin = c(34, 40, 46, 56) # sin sentido logico
tb = AnalisisWoe('edad', list(data_train, data_test), 'numeric', bin)
tb; biv_num = biv_iv(biv_num,tb)
var_num[1:27]
biv_num = list(name = c(), iv_tr = c(), iv_ts = c())
bin = c(34, 40, 46, 56) # sin sentido logico
tb = AnalisisWoe('edad', list(data_train, data_test), 'numeric', bin)
tb; biv_num = biv_iv(biv_num,tb)
bin = c(34, 40, 46, 56) # sin sentido logico
tb = AnalisisWoe('saldo_cal1234_max1m3', list(data_train, data_test), 'numeric', NULL)
tb; biv_num = biv_iv(biv_num,tb)
bin = c(0, 1952.6) # sin sentido logico
tb = AnalisisWoe('saldo_cal1234_max1m3', list(data_train, data_test), 'numeric', bin)
tb; biv_num = biv_iv(biv_num,tb)
bin = c(0) # sin sentido logico
tb = AnalisisWoe('saldo_cal1234_max1m3', list(data_train, data_test), 'numeric', bin)
tb; biv_num = biv_iv(biv_num,tb)
# bin = c(0) # iv test bajo
# tb = AnalisisWoe('saldo_cal1234_max1m3', list(data_train, data_test), 'numeric', bin)
# tb; biv_num = biv_iv(biv_num,tb)
bin = c(0)
tb = AnalisisWoe('disp_efectivo_max1m6', list(data_train, data_test), 'numeric', bin)
tb; biv_num = biv_iv(biv_num,tb)
bin = c(0)
tb = AnalisisWoe('disp_efectivo_max1m6', list(data_train, data_test), 'numeric', NULL)
tb; biv_num = biv_iv(biv_num,tb)
bin = c(0)
tb = AnalisisWoe('disp_efectivo_max1m6', list(data_train, data_test), 'numeric', bin)
tb; biv_num = biv_iv(biv_num,tb)
bin = c(0) # sin sentido logico
tb = AnalisisWoe('por_uso_efectivo_max1m6', list(data_train, data_test), 'numeric', bin)
tb; biv_num = biv_iv(biv_num,tb)
bin = c(0) # sin sentido logico
tb = AnalisisWoe('por_uso_linea_max1m6', list(data_train, data_test), 'numeric', bin)
tb; biv_num = biv_iv(biv_num,tb)
bin = c(0) # sin sentido logico
tb = AnalisisWoe('por_uso_linea_max1m6', list(data_train, data_test), 'numeric', NULL)
tb; biv_num = biv_iv(biv_num,tb)
bin = c(0.392775, 0.48778, 0.576675, 0.65116, 0.73276, 0.80325, 0.88862, 0.92968, 0.95879, 0.97642, 0.994425, 0.99999)
tb = AnalisisWoe('por_uso_linea_max1m6', list(data_train, data_test), 'numeric', bin)
tb; biv_num = biv_iv(biv_num,tb)
bin = c(0.48778, 0.576675, 0.65116, 0.73276, 0.80325, 0.88862, 0.92968, 0.95879, 0.97642, 0.994425, 0.99999)
tb = AnalisisWoe('por_uso_linea_max1m6', list(data_train, data_test), 'numeric', bin)
tb; biv_num = biv_iv(biv_num,tb)
bin = c(0.576675, 0.65116, 0.73276, 0.80325, 0.88862, 0.92968, 0.95879, 0.97642, 0.994425, 0.99999)
tb = AnalisisWoe('por_uso_linea_max1m6', list(data_train, data_test), 'numeric', bin)
tb; biv_num = biv_iv(biv_num,tb)
bin = c(0.576675, 0.65116, 0.73276, 0.80325, 0.88862, 0.92968, 0.95879, 0.97642)
tb = AnalisisWoe('por_uso_linea_max1m6', list(data_train, data_test), 'numeric', bin)
tb; biv_num = biv_iv(biv_num,tb)
bin = c(0.576675, 0.65116, 0.73276, 0.80325, 0.88862, 0.92968, 0.95879)
tb = AnalisisWoe('por_uso_linea_max1m6', list(data_train, data_test), 'numeric', bin)
tb; biv_num = biv_iv(biv_num,tb)
bin = c(0.576675)
tb = AnalisisWoe('por_uso_linea_max1m6', list(data_train, data_test), 'numeric', bin)
tb; biv_num = biv_iv(biv_num,tb)
bin = c(0.576675) # sin sentido logico
tb = AnalisisWoe('linea_total_1m', list(data_train, data_test), 'numeric', NULL)
tb; biv_num = biv_iv(biv_num,tb)
bin = c(181.0335, 400, 500, 600, 800, 945.293, 1000, 1306.712, 1601.4195, 1980, 2300, 2800.144, 3500, 4494.213, 5269.29, 6712.952, 9043.0945, 12481.61, 17525.2)
tb = AnalisisWoe('linea_total_1m', list(data_train, data_test), 'numeric', bin)
tb; biv_num = biv_iv(biv_num,tb)
bin = c(181.0335, 400, 500, 600, 800, 945.293, 1000, 1306.712, 1601.4195, 1980, 2300, 2800.144, 3500, 4494.213)
tb = AnalisisWoe('linea_total_1m', list(data_train, data_test), 'numeric', bin)
tb; biv_num = biv_iv(biv_num,tb)
bin = c(1000, 1306.712, 1601.4195, 1980, 2300, 2800.144, 3500, 4494.213)
tb = AnalisisWoe('linea_total_1m', list(data_train, data_test), 'numeric', bin)
tb; biv_num = biv_iv(biv_num,tb)
bin = c(1000, 1306.712, 1601.4195, 1980, 2300, 2800.144)
tb = AnalisisWoe('linea_total_1m', list(data_train, data_test), 'numeric', bin)
tb; biv_num = biv_iv(biv_num,tb)
bin = c(1000, 1306.712, 1601.4195, 1980, 2300)
tb = AnalisisWoe('linea_total_1m', list(data_train, data_test), 'numeric', bin)
tb; biv_num = biv_iv(biv_num,tb)
bin = c(1306.712)
tb = AnalisisWoe('linea_total_1m', list(data_train, data_test), 'numeric', bin)
tb; biv_num = biv_iv(biv_num,tb)
data_train = cbind(X_train_num[, var_num], y_train)
data_train[, 'tm'] = data_train$malo
data_train[, 'malo'] = as.factor(data_train$malo)
data_test = cbind(X_test_num[, var_num], y_test)
data_test[, 'tm'] = data_test$malo
data_test[, 'malo'] = as.factor(data_test$malo)
# # transformacion
data_train[,'edad'] = as.numeric(X_train_num[,'edad'])
data_train[,'frec_mora60_1m12'] = as.numeric(X_train_num[,'frec_mora60_1m12'])
# data_train[,'frec_calificacion_0_1m12'] = as.numeric(X_train_num[,'frec_calificacion_0_1m12'])
# data_train[,'frec_por_cal0_100_1m12'] = as.numeric(X_train_num[,'frec_por_cal0_100_1m12'])
# data_train[,'calificacion_max1m12'] = as.character(X_train_num[,'calificacion_max1m12'])
# data_train[,'frec_mora30_1m12'] = as.numeric(X_train_num[,'frec_mora30_1m12'])
# #
data_test[,'edad'] = as.numeric(X_test_num[,'edad'])
data_test[,'frec_mora60_1m12'] = as.numeric(X_test_num[,'frec_mora60_1m12'])
# data_test[,'frec_calificacion_0_1m12'] = as.numeric(X_test_num[,'frec_calificacion_0_1m12'])
# data_test[,'frec_por_cal0_100_1m12'] = as.numeric(X_test_num[,'frec_por_cal0_100_1m12'])
# data_test[,'calificacion_max1m12'] = as.character(X_test_num[,'calificacion_max1m12'])
# data_test[,'frec_mora30_1m12'] = as.numeric(X_test_num[,'frec_mora30_1m12'])
# # imputacion
# data_train$cuota[is.na(data_train$cuota)] = median(X_train_num$cuota, na.rm = T) # 1348.865
# data_train$ci_pv[is.na(data_train$ci_pv)] = median(X_train_num$ci_pv, na.rm = T) # 0.03529931
# #
# data_test$cuota[is.na(data_test$cuota)] = 1348.865
# data_test$ci_pv[is.na(data_test$ci_pv)] = 0.03529931
bin = c(1306.712)
tb = AnalisisWoe('frec_mora60_1m12', list(data_train, data_test), 'numeric', bin)
tb; biv_num = biv_iv(biv_num,tb)
bin = c(1306.712)
tb = AnalisisWoe('frec_mora60_1m12', list(data_train, data_test), 'numeric', NULL)
tb; biv_num = biv_iv(biv_num,tb)
bin = c(0:11)
tb = AnalisisWoe('frec_mora60_1m12', list(data_train, data_test), 'numeric', bin)
tb; biv_num = biv_iv(biv_num,tb)
