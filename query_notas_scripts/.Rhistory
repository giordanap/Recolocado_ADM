for (i in 2:n) {
for (j in 1:r) {
if( rownames(tb_final)[i] == var_iv$name_woe[j]  ) {
tb_final[i, 'IV_Tr'] =  round( var_iv$iv_tr[j] * 100, 2 )
tb_final[i, 'IV_Ts'] =  round( var_iv$iv_ts[j] * 100, 2 )
}
}
}
tb_final
########## Gini 01
# start_time = as.numeric(Sys.time())
z1_train=predict(modelo1,data=train_woe_final)
p1_train=1/(1+exp(-z1_train))
z1_test=predict(modelo1,newdata=test_woe_final)
p1_test=1/(1+exp(-z1_test))
writeLines("Tasa de malos:")
mean(data_train$tm)
mean(data_test$tm)
writeLines("\nProbabilidad estimada:")
mean(p1_train)
mean(p1_test)
gini1_tr=rcorr.cens(p1_train,data_train$tm)[2]
gini1_ts=rcorr.cens(p1_test,data_test$tm)[2]
roc1_tr=(gini1_tr+1)/2;roc1_ts=(gini1_ts+1)/2
writeLines("\nGini y ROC:")
tb=cbind(c(gini1_tr,roc1_tr),c(gini1_ts,roc1_ts))
colnames(tb)=c("TRAIN","TEST");row.names(tb)=c("GINI","ROC"); round(tb*100,2)
# time_process('Gini del modelo', start_time)
######### MODELO 1
formula_logit1 = as.formula(malo ~
# -1
+ edad
+ ci_pv
+ cuota
# + edad_woe
# + ci_pv_woe
# + cuota_woe
# + linea_activa_max1m12_woe
# + por_mora_0_min1m12_woe
# + linea_total_max1m12_woe
# + por_uso_linea_max1m12_woe
+ por_mora_0_min1m3_woe
+ por_uso_linea_max1m3_woe
# + por_mora_0_min1m6_woe
+ linea_activa_max1m6_woe
# + linea_total_max1m6_woe
# + linea_activa_max1m3_woe
# + linea_total_max1m3_woe
# + linea_total_1m_woe
# + linea_activa_1m_woe
# + linea_activa_max1m3_max4m12_woe
# + linea_activa_1m_max2m12_woe
# + linea_activa_max1m6_max7m12_woe
# + linea_activa_var1m12_woe
# + linea_activa_var1m6_woe
# + por_mora_0_min1m6_min7m12_woe
+ perfil_woe
# + linea_activa_max1m12_flg_woe
# + linea_total_max1m12_flg_woe
# + linea_activa_max1m6_flg_woe
# + linea_activa_max1m3_flg_woe
# + linea_total_max1m3_flg_woe
# + linea_activa_var1m3_woe
)
modelo1 <- glm(formula_logit1, data=train_woe_final, family = "binomial")
summary(modelo1)
# model_wald(modelo1,train_woe)
# model_wald(modelo1,train_woe,'cor')
# model_wald(modelo1,train_woe,'cor')[,5:dim(model_wald(modelo1,train_woe,'cor'))[2]]
######### MODELO 1
formula_logit1 = as.formula(malo ~
# -1
+ edad
+ ci_pv
+ cuota
# + edad_woe
# + ci_pv_woe
# + cuota_woe
# + linea_activa_max1m12_woe
# + por_mora_0_min1m12_woe
# + linea_total_max1m12_woe
# + por_uso_linea_max1m12_woe
+ por_mora_0_min1m3_woe
+ por_uso_linea_max1m3_woe
# + por_mora_0_min1m6_woe
+ linea_activa_max1m6_woe
# + linea_total_max1m6_woe
# + linea_activa_max1m3_woe
# + linea_total_max1m3_woe
# + linea_total_1m_woe
# + linea_activa_1m_woe
# + linea_activa_max1m3_max4m12_woe
# + linea_activa_1m_max2m12_woe
# + linea_activa_max1m6_max7m12_woe
# + linea_activa_var1m12_woe
# + linea_activa_var1m6_woe
# + por_mora_0_min1m6_min7m12_woe
+ perfil_woe
# + linea_activa_max1m12_flg_woe
# + linea_total_max1m12_flg_woe
# + linea_activa_max1m6_flg_woe
# + linea_activa_max1m3_flg_woe
# + linea_total_max1m3_flg_woe
# + linea_activa_var1m3_woe
)
modelo1 <- glm(formula_logit1, data=train_woe_final, family = "binomial")
summary(modelo1)
# model_wald(modelo1,train_woe)
# model_wald(modelo1,train_woe,'cor')
# model_wald(modelo1,train_woe,'cor')[,5:dim(model_wald(modelo1,train_woe,'cor'))[2]]
######### MODELO 1
formula_logit1 = as.formula(malo ~
# -1
+ edad
+ ci_pv
+ cuota
# + edad_woe
# + ci_pv_woe
# + cuota_woe
# + linea_activa_max1m12_woe
# + por_mora_0_min1m12_woe
# + linea_total_max1m12_woe
# + por_uso_linea_max1m12_woe
+ por_mora_0_min1m3_woe
# + por_uso_linea_max1m3_woe
# + por_mora_0_min1m6_woe
+ linea_activa_max1m6_woe
# + linea_total_max1m6_woe
# + linea_activa_max1m3_woe
# + linea_total_max1m3_woe
# + linea_total_1m_woe
# + linea_activa_1m_woe
# + linea_activa_max1m3_max4m12_woe
# + linea_activa_1m_max2m12_woe
# + linea_activa_max1m6_max7m12_woe
# + linea_activa_var1m12_woe
# + linea_activa_var1m6_woe
# + por_mora_0_min1m6_min7m12_woe
+ perfil_woe
# + linea_activa_max1m12_flg_woe
# + linea_total_max1m12_flg_woe
# + linea_activa_max1m6_flg_woe
# + linea_activa_max1m3_flg_woe
# + linea_total_max1m3_flg_woe
# + linea_activa_var1m3_woe
)
modelo1 <- glm(formula_logit1, data=train_woe_final, family = "binomial")
summary(modelo1)
# model_wald(modelo1,train_woe)
# model_wald(modelo1,train_woe,'cor')
# model_wald(modelo1,train_woe,'cor')[,5:dim(model_wald(modelo1,train_woe,'cor'))[2]]
var_iv = biv
tb_final = model_wald(modelo1,train_woe_final)
n = length( rownames( tb_final ) )
r = length(var_iv$name_woe)
for (i in 2:n) {
for (j in 1:r) {
if( rownames(tb_final)[i] == var_iv$name_woe[j]  ) {
tb_final[i, 'IV_Tr'] =  round( var_iv$iv_tr[j] * 100, 2 )
tb_final[i, 'IV_Ts'] =  round( var_iv$iv_ts[j] * 100, 2 )
}
}
}
tb_final
var_iv = biv
tb_final = model_wald(modelo1,train_woe_final)
n = length( rownames( tb_final ) )
r = length(var_iv$name_woe)
for (i in 2:n)
{
for (j in 1:r)
{
if( rownames(tb_final)[i] == var_iv$name_woe[j]  )
{
tb_final[i, 'IV_Tr'] =  round( var_iv$iv_tr[j] * 100, 2 )
tb_final[i, 'IV_Ts'] =  round( var_iv$iv_ts[j] * 100, 2 )
}
}
}
tb_final
########## Gini 01
# start_time = as.numeric(Sys.time())
z1_train=predict(modelo1,data=train_woe_final)
p1_train=1/(1+exp(-z1_train))
z1_test=predict(modelo1,newdata=test_woe_final)
p1_test=1/(1+exp(-z1_test))
writeLines("Tasa de malos:")
mean(data_train$tm)
mean(data_test$tm)
writeLines("\nProbabilidad estimada:")
mean(p1_train)
mean(p1_test)
gini1_tr=rcorr.cens(p1_train,data_train$tm)[2]
gini1_ts=rcorr.cens(p1_test,data_test$tm)[2]
roc1_tr=(gini1_tr+1)/2;roc1_ts=(gini1_ts+1)/2
writeLines("\nGini y ROC:")
tb=cbind(c(gini1_tr,roc1_tr),c(gini1_ts,roc1_ts))
colnames(tb)=c("TRAIN","TEST");row.names(tb)=c("GINI","ROC"); round(tb*100,2)
# time_process('Gini del modelo', start_time)
######### MODELO 1
formula_logit1 = as.formula(malo ~
# -1
+ edad
+ ci_pv
+ cuota
# + edad_woe
# + ci_pv_woe
# + cuota_woe
# + linea_activa_max1m12_woe
# + por_mora_0_min1m12_woe
# + linea_total_max1m12_woe
# + por_uso_linea_max1m12_woe
+ por_mora_0_min1m3_woe
# + por_uso_linea_max1m3_woe
# + por_mora_0_min1m6_woe
# + linea_activa_max1m6_woe
# + linea_total_max1m6_woe
# + linea_activa_max1m3_woe
# + linea_total_max1m3_woe
# + linea_total_1m_woe
+ linea_activa_1m_woe
# + linea_activa_max1m3_max4m12_woe
# + linea_activa_1m_max2m12_woe
# + linea_activa_max1m6_max7m12_woe
# + linea_activa_var1m12_woe
# + linea_activa_var1m6_woe
# + por_mora_0_min1m6_min7m12_woe
+ perfil_woe
# + linea_activa_max1m12_flg_woe
# + linea_total_max1m12_flg_woe
# + linea_activa_max1m6_flg_woe
# + linea_activa_max1m3_flg_woe
# + linea_total_max1m3_flg_woe
# + linea_activa_var1m3_woe
)
modelo1 <- glm(formula_logit1, data=train_woe_final, family = "binomial")
summary(modelo1)
# model_wald(modelo1,train_woe)
# model_wald(modelo1,train_woe,'cor')
# model_wald(modelo1,train_woe,'cor')[,5:dim(model_wald(modelo1,train_woe,'cor'))[2]]
########## Gini 01
# start_time = as.numeric(Sys.time())
z1_train=predict(modelo1,data=train_woe_final)
p1_train=1/(1+exp(-z1_train))
z1_test=predict(modelo1,newdata=test_woe_final)
p1_test=1/(1+exp(-z1_test))
writeLines("Tasa de malos:")
mean(data_train$tm)
mean(data_test$tm)
writeLines("\nProbabilidad estimada:")
mean(p1_train)
mean(p1_test)
gini1_tr=rcorr.cens(p1_train,data_train$tm)[2]
gini1_ts=rcorr.cens(p1_test,data_test$tm)[2]
roc1_tr=(gini1_tr+1)/2;roc1_ts=(gini1_ts+1)/2
writeLines("\nGini y ROC:")
tb=cbind(c(gini1_tr,roc1_tr),c(gini1_ts,roc1_ts))
colnames(tb)=c("TRAIN","TEST");row.names(tb)=c("GINI","ROC"); round(tb*100,2)
# time_process('Gini del modelo', start_time)
######### MODELO 1
formula_logit1 = as.formula(malo ~
# -1
+ edad
+ ci_pv
+ cuota
# + edad_woe
# + ci_pv_woe
# + cuota_woe
# + linea_activa_max1m12_woe
# + por_mora_0_min1m12_woe
# + linea_total_max1m12_woe
# + por_uso_linea_max1m12_woe
+ por_mora_0_min1m3_woe
# + por_uso_linea_max1m3_woe
# + por_mora_0_min1m6_woe
# + linea_activa_max1m6_woe
# + linea_total_max1m6_woe
+ linea_activa_max1m3_woe
# + linea_total_max1m3_woe
# + linea_total_1m_woe
# + linea_activa_1m_woe
# + linea_activa_max1m3_max4m12_woe
# + linea_activa_1m_max2m12_woe
# + linea_activa_max1m6_max7m12_woe
# + linea_activa_var1m12_woe
# + linea_activa_var1m6_woe
# + por_mora_0_min1m6_min7m12_woe
+ perfil_woe
# + linea_activa_max1m12_flg_woe
# + linea_total_max1m12_flg_woe
# + linea_activa_max1m6_flg_woe
# + linea_activa_max1m3_flg_woe
# + linea_total_max1m3_flg_woe
# + linea_activa_var1m3_woe
)
modelo1 <- glm(formula_logit1, data=train_woe_final, family = "binomial")
summary(modelo1)
# model_wald(modelo1,train_woe)
# model_wald(modelo1,train_woe,'cor')
# model_wald(modelo1,train_woe,'cor')[,5:dim(model_wald(modelo1,train_woe,'cor'))[2]]
########## Gini 01
# start_time = as.numeric(Sys.time())
z1_train=predict(modelo1,data=train_woe_final)
p1_train=1/(1+exp(-z1_train))
z1_test=predict(modelo1,newdata=test_woe_final)
p1_test=1/(1+exp(-z1_test))
writeLines("Tasa de malos:")
mean(data_train$tm)
mean(data_test$tm)
writeLines("\nProbabilidad estimada:")
mean(p1_train)
mean(p1_test)
gini1_tr=rcorr.cens(p1_train,data_train$tm)[2]
gini1_ts=rcorr.cens(p1_test,data_test$tm)[2]
roc1_tr=(gini1_tr+1)/2;roc1_ts=(gini1_ts+1)/2
writeLines("\nGini y ROC:")
tb=cbind(c(gini1_tr,roc1_tr),c(gini1_ts,roc1_ts))
colnames(tb)=c("TRAIN","TEST");row.names(tb)=c("GINI","ROC"); round(tb*100,2)
# time_process('Gini del modelo', start_time)
######### MODELO 1
formula_logit1 = as.formula(malo ~
# -1
+ edad
+ ci_pv
+ cuota
# + edad_woe
# + ci_pv_woe
# + cuota_woe
# + linea_activa_max1m12_woe
# + por_mora_0_min1m12_woe
# + linea_total_max1m12_woe
# + por_uso_linea_max1m12_woe
+ por_mora_0_min1m3_woe
# + por_uso_linea_max1m3_woe
# + por_mora_0_min1m6_woe
+ linea_activa_max1m6_woe
# + linea_total_max1m6_woe
# + linea_activa_max1m3_woe
# + linea_total_max1m3_woe
# + linea_total_1m_woe
# + linea_activa_1m_woe
# + linea_activa_max1m3_max4m12_woe
# + linea_activa_1m_max2m12_woe
# + linea_activa_max1m6_max7m12_woe
# + linea_activa_var1m12_woe
# + linea_activa_var1m6_woe
# + por_mora_0_min1m6_min7m12_woe
+ perfil_woe
# + linea_activa_max1m12_flg_woe
# + linea_total_max1m12_flg_woe
# + linea_activa_max1m6_flg_woe
# + linea_activa_max1m3_flg_woe
# + linea_total_max1m3_flg_woe
# + linea_activa_var1m3_woe
)
modelo1 <- glm(formula_logit1, data=train_woe_final, family = "binomial")
summary(modelo1)
# model_wald(modelo1,train_woe)
# model_wald(modelo1,train_woe,'cor')
# model_wald(modelo1,train_woe,'cor')[,5:dim(model_wald(modelo1,train_woe,'cor'))[2]]
########## Gini 01
# start_time = as.numeric(Sys.time())
z1_train=predict(modelo1,data=train_woe_final)
p1_train=1/(1+exp(-z1_train))
z1_test=predict(modelo1,newdata=test_woe_final)
p1_test=1/(1+exp(-z1_test))
writeLines("Tasa de malos:")
mean(data_train$tm)
mean(data_test$tm)
writeLines("\nProbabilidad estimada:")
mean(p1_train)
mean(p1_test)
gini1_tr=rcorr.cens(p1_train,data_train$tm)[2]
gini1_ts=rcorr.cens(p1_test,data_test$tm)[2]
roc1_tr=(gini1_tr+1)/2;roc1_ts=(gini1_ts+1)/2
writeLines("\nGini y ROC:")
tb=cbind(c(gini1_tr,roc1_tr),c(gini1_ts,roc1_ts))
colnames(tb)=c("TRAIN","TEST");row.names(tb)=c("GINI","ROC"); round(tb*100,2)
# time_process('Gini del modelo', start_time)
######### MODELO 1
formula_logit1 = as.formula(malo ~
# -1
+ edad
+ ci_pv
+ cuota
# + edad_woe
# + ci_pv_woe
# + cuota_woe
# + linea_activa_max1m12_woe
# + por_mora_0_min1m12_woe
# + linea_total_max1m12_woe
# + por_uso_linea_max1m12_woe
+ por_mora_0_min1m3_woe
# + por_uso_linea_max1m3_woe
# + por_mora_0_min1m6_woe
# + linea_activa_max1m6_woe
# + linea_total_max1m6_woe
# + linea_activa_max1m3_woe
# + linea_total_max1m3_woe
# + linea_total_1m_woe
# + linea_activa_1m_woe
# + linea_activa_max1m3_max4m12_woe
# + linea_activa_1m_max2m12_woe
# + linea_activa_max1m6_max7m12_woe
# + linea_activa_var1m12_woe
# + linea_activa_var1m6_woe
# + por_mora_0_min1m6_min7m12_woe
+ perfil_woe
# + linea_activa_max1m12_flg_woe
# + linea_total_max1m12_flg_woe
# + linea_activa_max1m6_flg_woe
# + linea_activa_max1m3_flg_woe
# + linea_total_max1m3_flg_woe
# + linea_activa_var1m3_woe
)
modelo1 <- glm(formula_logit1, data=train_woe_final, family = "binomial")
summary(modelo1)
# model_wald(modelo1,train_woe)
# model_wald(modelo1,train_woe,'cor')
# model_wald(modelo1,train_woe,'cor')[,5:dim(model_wald(modelo1,train_woe,'cor'))[2]]
######### MODELO 1
formula_logit1 = as.formula(malo ~
# -1
+ edad
+ ci_pv
+ cuota
# + edad_woe
# + ci_pv_woe
# + cuota_woe
# + linea_activa_max1m12_woe
# + por_mora_0_min1m12_woe
# + linea_total_max1m12_woe
# + por_uso_linea_max1m12_woe
+ por_mora_0_min1m3_woe
# + por_uso_linea_max1m3_woe
# + por_mora_0_min1m6_woe
+ linea_activa_max1m6_woe
# + linea_total_max1m6_woe
# + linea_activa_max1m3_woe
# + linea_total_max1m3_woe
# + linea_total_1m_woe
# + linea_activa_1m_woe
# + linea_activa_max1m3_max4m12_woe
# + linea_activa_1m_max2m12_woe
# + linea_activa_max1m6_max7m12_woe
# + linea_activa_var1m12_woe
# + linea_activa_var1m6_woe
# + por_mora_0_min1m6_min7m12_woe
+ perfil_woe
# + linea_activa_max1m12_flg_woe
# + linea_total_max1m12_flg_woe
# + linea_activa_max1m6_flg_woe
# + linea_activa_max1m3_flg_woe
# + linea_total_max1m3_flg_woe
# + linea_activa_var1m3_woe
)
modelo1 <- glm(formula_logit1, data=train_woe_final, family = "binomial")
summary(modelo1)
# model_wald(modelo1,train_woe)
# model_wald(modelo1,train_woe,'cor')
# model_wald(modelo1,train_woe,'cor')[,5:dim(model_wald(modelo1,train_woe,'cor'))[2]]
var_iv = biv
tb_final = model_wald(modelo1,train_woe_final)
n = length( rownames( tb_final ) )
r = length(var_iv$name_woe)
for (i in 2:n)
{
for (j in 1:r)
{
if( rownames(tb_final)[i] == var_iv$name_woe[j]  )
{
tb_final[i, 'IV_Tr'] =  round( var_iv$iv_tr[j] * 100, 2 )
tb_final[i, 'IV_Ts'] =  round( var_iv$iv_ts[j] * 100, 2 )
}
}
}
tb_final
########## Gini 01
# start_time = as.numeric(Sys.time())
z1_train=predict(modelo1,data=train_woe_final)
p1_train=1/(1+exp(-z1_train))
z1_test=predict(modelo1,newdata=test_woe_final)
p1_test=1/(1+exp(-z1_test))
writeLines("Tasa de malos:")
mean(data_train$tm)
mean(data_test$tm)
writeLines("\nProbabilidad estimada:")
mean(p1_train)
mean(p1_test)
gini1_tr=rcorr.cens(p1_train,data_train$tm)[2]
gini1_ts=rcorr.cens(p1_test,data_test$tm)[2]
roc1_tr=(gini1_tr+1)/2;roc1_ts=(gini1_ts+1)/2
writeLines("\nGini y ROC:")
tb=cbind(c(gini1_tr,roc1_tr),c(gini1_ts,roc1_ts))
colnames(tb)=c("TRAIN","TEST");row.names(tb)=c("GINI","ROC"); round(tb*100,2)
# time_process('Gini del modelo', start_time)
# Correlacion modelo 01
# variables woe del modelo
var_woe = rownames(summary(modelo1)$coefficients)
n = length(var_woe)
var_woe = var_woe[2:n]
cor( train_woe[ var_woe ] )
# Correlacion modelo 01
# variables woe del modelo
var_woe = rownames(summary(modelo1)$coefficients)
n = length(var_woe)
var_woe = var_woe[2:n]
cor( train_woe_final[ var_woe ] )
# variables numericas originales del modelo
var = c()
for (i in var_woe) { var = append( var, substr( i, 1, nchar(i) - 4 ) ) }
cor( data_train[ c(intersect(var_num, var), 'edad' ) ], use='pairwise.complete.obs' )
